name: CI pipeline

on: [ push, pull_request ]

jobs:
  php-lint:
    name: PHP lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run validation
        run: find . -name '*.php*' -print0 | xargs -0 -n1 -P8 php -l

  js-lint:
    name: Javascript lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run validation
        run: find . -name '*.js*' -print0 | xargs -0 -n1 -P8 node --check

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install npm dependencies
        run: npm i
      - name: Copy npm dependencies to correct places
        run: |
          cp node_modules/@materializecss/materialize/dist/css/materialize.min.css src/css/
          cp node_modules/@materializecss/materialize/dist/js/materialize.min.js src/js/
      - name: Install gettext
        run: sudo apt install gettext
      - name: Compile .po files to .mo files
        run: msgfmt languages/de_DE.po -o languages/de_DE.mo
      - name: Stash bundle
        uses: actions/upload-artifact@v2
        with:
          name: bundle
          path: ./src

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [php-lint, js-lint, build]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Unstash bundle
        uses: actions/download-artifact@v2
        with:
          name: bundle
          path: ./
      - name: Install lftp
        run: sudo apt install lftp
      - name: Push new bundle to remote
        run: lftp -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; mirror -R ./ ${{ secrets.FTP_SERVER_DIR }}-${{ github.sha }}; quit;" ${{ secrets.FTP_URL }}
      - name: Remove old backup
        continue-on-error: true
        run: lftp -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; rm -r ${{ secrets.FTP_SERVER_DIR }}.bak; quit;" ${{ secrets.FTP_URL }}
      - name: Backup current bundle and deploy new bundle
        run: lftp -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; mv ${{ secrets.FTP_SERVER_DIR }} ${{ secrets.FTP_SERVER_DIR }}.bak; mv ${{ secrets.FTP_SERVER_DIR }}-${{ github.sha }} ${{ secrets.FTP_SERVER_DIR }}; quit;" ${{ secrets.FTP_URL }}
