name: CI pipeline

on: [ push, pull_request ]

jobs:
  lint-php:
    name: PHP lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run linter
        run: npm run lint-php

  lint-js:
    name: Javascript lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run linter
        run: npm run lint-js

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get install gettext
          npm ci
      - name: Build project
        run: npm run build
      - name: Stash bundle
        uses: actions/upload-artifact@v2
        with:
          name: bundle
          path: ./dist

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [lint-php, lint-js, build]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Unstash bundle
        uses: actions/download-artifact@v2
        with:
          name: bundle
          path: ./
      - name: Install lftp
        run: sudo apt-get install lftp
      - name: Push new bundle to remote
        run: lftp -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; mirror --reverse ./ ${{ secrets.FTP_SERVER_DIR }}-${{ github.sha }} --verbose --parallel=10; quit;" ${{ secrets.FTP_URL }}
      - name: Move existing backup
        continue-on-error: true
        run: lftp -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; mv ${{ secrets.FTP_SERVER_DIR }}.bak ${{ secrets.FTP_SERVER_DIR }}.bak.old; quit;" ${{ secrets.FTP_URL }}
      - name: Backup current bundle and deploy new bundle
        run: lftp -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; mv ${{ secrets.FTP_SERVER_DIR }} ${{ secrets.FTP_SERVER_DIR }}.bak; mv ${{ secrets.FTP_SERVER_DIR }}-${{ github.sha }} ${{ secrets.FTP_SERVER_DIR }}; quit;" ${{ secrets.FTP_URL }}

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install dependencies
      run: npm ci
    - name: Run E2E Tests
      run: npm run e2e -- --config baseUrl=${{ secrets.CYPRESS_BASE_URL }},blockHosts=${{ secrets.CYPRESS_BLOCK_HOSTS }} --env WP_SUPER_CACHE_BUSTER=${{ secrets.CYPRESS_CACHE_BUSTER }}
    - name: Upload videos
      uses: actions/upload-artifact@v2
      with:
        name: e2e-videos
        path: cypress/videos

  cleanup:
    name: Clean up
    runs-on: ubuntu-latest
    needs: [e2e]
    steps:
      - name: Install lftp
        run: sudo apt-get install lftp
      - name: Remove old bug files
        continue-on-error: true
        run: lftp -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; glob -a mrm -r ${{ secrets.FTP_SERVER_DIR }}.bug-*; quit;" ${{ secrets.FTP_URL }}
      - name: Remove old backup
        continue-on-error: true
        run: lftp -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; rm -r ${{ secrets.FTP_SERVER_DIR }}.bak.old; quit;" ${{ secrets.FTP_URL }}

  rollback:
    name: Rollback
    runs-on: ubuntu-latest
    needs: [e2e]
    if: ${{ failure() }}
    steps:
      - name: Install lftp
        run: sudo apt-get install lftp
      - name: Clean up new bundle
        continue-on-error: true
        run: lftp -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; rm -r ${{ secrets.FTP_SERVER_DIR }}-${{ github.sha }}; quit;" ${{ secrets.FTP_URL }} 
      - name: Rollback backup and preserve buggy bundle
        run: lftp -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; mv ${{ secrets.FTP_SERVER_DIR }} ${{ secrets.FTP_SERVER_DIR }}.bug-${{ github.sha }}; mv ${{ secrets.FTP_SERVER_DIR }}.bak ${{ secrets.FTP_SERVER_DIR }}; quit;" ${{ secrets.FTP_URL }}
      - name: Restore old backup
        run: lftp -u ${{ secrets.FTP_USER }},${{ secrets.FTP_PASSWORD }} -e "set ssl:verify-certificate no; mv ${{ secrets.FTP_SERVER_DIR }}.bak.old ${{ secrets.FTP_SERVER_DIR }}.bak; quit;" ${{ secrets.FTP_URL }}